% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster.R
\name{cluster}
\alias{cluster}
\title{Wrapper to clustering algorithms}
\usage{
cluster(
  dat,
  timepoints = NULL,
  K,
  dist.method = c("euclidean", "cor.diss", "dtw"),
  cluster.method = c("kmeans", "hclust"),
  hclust.algorithm = "complete",
  kmeans.algorithm = "Hartigan-Wong",
  center.dat = TRUE,
  scale.dat = FALSE,
  verbose = FALSE,
  seed = NULL,
  ...
)
}
\arguments{
\item{dat}{a (denoised) data matrix with \code{m} biomarkers as rows, over \code{n} time points (columns).}

\item{timepoints}{a vector of time points for columns of dat. While this is not necessary, it's here for now to remind the user about the analysis pipeline.}

\item{K}{a number of clusters.}

\item{dist.method}{a distance method for time course data, resulting in a \code{m * m} distance matrix for rows. 'dtw' for dynamic time wrapping or 'cor.diss' for correlation-based dissimilarities.}

\item{cluster.method}{a clustering method.}

\item{hclust.algorithm}{an algorithm used in hierarchical clustering. See \code{hclust} for a full list.}

\item{kmeans.algorithm}{an algorithm used in kmeans clustering. See \code{kmeans} for a full list.}

\item{center.dat}{a logical specifying to center the input and denoised data. By default, \code{TRUE}.}

\item{scale.dat}{a logical specifying to scale the input and denoised data. By default, \code{FALSE}.}

\item{verbose}{a logical specifying to print the computational progress. By default, \code{FALSE}.}

\item{seed}{a seed for the random number generator.}

\item{...}{optional arguments.}
}
\value{
\code{cluster} returns a list consisting of
\item{dat.dtw}{\code{m * m} distance matrix based on dynamic time wrapping.}
\item{cluster.obj}{an object returned from clustering the predicted data.}
\item{membership}{a vector of length \code{m}, identities of clusters.}
}
\description{
This is a convenient wrapper to Kmeans and Hierarchical clustering when using the `tms` package.
}
\examples{
\dontrun{
## load the example "coptm" data
data(cys_optm)
meta <- cys_optm[,1:4]
optm <- log(cys_optm[meta$Select,5:10])
optm <- t(scale(t(optm), scale=TRUE, center=TRUE))
days <- as.numeric(colnames(optm))

## denoise using the cubic splines
denoised_optm <- denoise_spline(optm, timepoints = days, dof="cv", verbose=FALSE)

## cluster the denoised data using K-means clustering
clustered_optm <- cluster(denoised_optm,
                timepoints = days,
                cluster.method = "kmeans",
                K=6,
                center.dat = TRUE,
                scale.dat = FALSE,
                verbose = TRUE)
}
}
\author{
Neo Christopher Chung \email{nchchung@gmail.com}
}
